generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id           String   @id @default(uuid())
  name         Roles    @unique
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  descriptions String
  users        User[]   @relation("role_connections")

  @@map("roles")
}

model User {
  id            String         @id @default(uuid())
  login         String         @unique
  password      String
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  chatsId       Chat[]
  projects      Project[]
  refreshTokens RefreshToken[]
  roles         Role[]         @relation("role_connections")

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  tokenHash String   @unique @map("token_hash")
  revoked   Boolean
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}

model Project {
  id        String   @id @default(uuid())
  name      String
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]

  @@map("projects")
}

model Task {
  id        String     @id @default(uuid())
  name      String
  status    TaskStatus @default(TODO)
  deadline  DateTime?
  projectId String     @map("project_id")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  project   Project    @relation(fields: [projectId], references: [id])

  @@map("tasks")
}

model Chat {
  id        String   @id @default(uuid())
  message   String
  userId    String   @map("user_id")
  filePath  String?  @map("file_path")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("chats")
}

enum Roles {
  USER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
